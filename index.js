// –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç —Å–ª–æ–≤–æ "—Ä—É–±–∞–π" –≤ —á–∞—Ç–µ, –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç "–ø—Ä–∏–≤–µ—Ç"
const {Telegraf} = require('telegraf');
const bot = new Telegraf('5349322670:AAGgL_PuGYb8T6CHxy_ZqY4BlMOnn8WaC64');

bot.start((ctx) => ctx.reply('–ü—Ä–∏–≤–µ—Ç!'));

bot.on('sticker', (ctx) =>
{
	if (ctx.message.sticker.emoji == 'üëç')
	{
		ctx.reply('üëå');
	}
});

bot.on('voice', (ctx) =>
{
	if (ctx.message.voice.duration > 15)
	{
		ctx.reply("–∑–∞ —Ç–∞–∫–∏–µ –¥–ª–∏–Ω–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤—ã–µ –±—É–¥–µ—à—å –≥–æ—Ä–µ—Ç—å –≤ –∞–¥—É");
	}
});
bot.on('message', (ctx) =>
{
	hendler(ctx);
})

async function hendler(ctx)
{
	if (includesStrigoi(ctx.message.text))
	{
		await ctx.reply('))))');
	}
	else if (includesRub(ctx.message.text || ""))
	{
		await ctx.reply(`https://picsum.photos/id/${randomInteger(1, 300)}/400/500`);
	}
}

function randomInteger(min, max)
{
	let rand = min + Math.random() * (max + 1 - min);
	return Math.floor(rand);
}

// –∏—Å–∫–∞—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å–ª–æ–≤–æ "—Ä—É–±" —É–±–∏—Ä–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã –∏ –ø—Ä–∏–≤–æ–¥–∏—Ç—å –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
function includesRub(text)
{
	return text.toLowerCase().replace(/\s/g, "").includes("—Ä—É–±");
}

// –∏—Å–∫–∞—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–ª–æ–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –ª—é–±—ã–º —Å–ª–æ–≤–æ–º –∏–∑ –º–∞—Å—Å–∏–≤–∞ strigoi —É–±–∏—Ä–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã –ø–æ–≤—Ç—Ä—Ä—è—é—â–∏–µ—Å—è –±—É–∫–≤—ã –∏ –ø—Ä–∏–≤–æ–¥–∏—Ç—å –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
function includesStrigoi(text)
{
	let strigoi = ['strigoi', '—Å—Ç—Ä–∏–≥–æ–π', '—Å—Ç—Ä–∏–≥', 'strig', '—Å—Ç—Ä–∏–≥–æ–π']
	
	let strigoiText = text.toLowerCase().replace(/\s/g, "").replace(/(.)\1+/g, "$1");
	
	for (let i = 0; i < strigoi.length; i++)
	{
		if (strigoiText.includes(strigoi[i]))
		{
			return true;
		}
	}
	
	return false;
}

bot.launch();






